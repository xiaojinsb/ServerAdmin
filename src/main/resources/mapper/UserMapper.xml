<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sa.modules.dao.UserDao">

    <!--根据名字查用户-->
    <select id="queryByUserName" resultType="com.sa.modules.entity.UserEntity">
        select * from sa_user where username = #{username}
    </select>

    <!-- 查询用户的所有权限 -->
    <select id="queryAllPerms" resultType="string">
        select m.perms from sa_user_role ur
        LEFT JOIN sa_role_menu rm on ur.role_id = rm.role_id
        LEFT JOIN sa_menu m on rm.menu_id = m.menu_id
        where ur.user_id = #{userId}
    </select>

    <!-- 查询用户的所有菜单ID -->
    <select id="queryAllMenuId" resultType="long">
        select distinct rm.menu_id from sa_user_role ur
        LEFT JOIN sa_role_menu rm on ur.role_id = rm.role_id
        where ur.user_id = #{userId}
    </select>

    <!--列出所有用户 数-->
    <select id="queryTotal" resultType="int">
        select COUNT(*) from sa_user WHERE user_id != 1
        <if test="username !=null and username!=''">
            AND username LIKE "%"#{username}"%"
        </if>
        <if test="status !=null and status!=''">
            AND status = #{status}
        </if>
    </select>

    <!--列出所有用户-->
    <select id="queryList" resultType="com.sa.modules.entity.UserEntity">
        select * from sa_user WHERE user_id != 1
        <if test="username !=null and username!=''">
            AND username LIKE "%"#{username}"%"
        </if>
        <if test="status !=null and status!=''">
            AND status = #{status}
        </if>
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>

    <!--新增用户-->
    <insert id="add" parameterType="com.sa.modules.entity.UserEntity" useGeneratedKeys="true" keyProperty="userId">
        insert into sa_user
        (
        `user_id`,
        `username`,
        `password`,
        `salt`,
        `email`,
        `mobile`,
        `status`,
        `create_user_id`,
        `create_time`
        )
        values
        (
        #{userId},
        #{username},
        #{password},
        #{salt},
        #{email},
        #{mobile},
        #{status},
        #{createUserId},
        #{createTime}
        )
    </insert>

    <!--更新用户-->
    <update id="update" parameterType="com.sa.modules.entity.UserEntity">
        update sa_user set email = #{email}, mobile = #{mobile}, status = #{status} where user_id = #{userId}
    </update>

    <!--删除用户-->
    <delete id="delete">
        delete from sa_user where user_id = #{id}
    </delete>

    <!--列出用户拥有角色-->
    <select id="userRoleList" resultType="int">
      SELECT r.role_id FROM sa_user u,sa_role r,sa_user_role ur
        WHERE u.user_id = ur.user_id AND ur.role_id = r.role_id AND u.user_id = #{id};
    </select>
</mapper>
